@page "/posts"

@inject PostSearchService PostSearchService
@inject ISnackbar Snackbar
@inject ILogger<Posts> Logger

@attribute [Sitemap]

<MetadataComponent Title="Opslag"
                   Description="Læs og skriv opslag om stort og småt her" />

<MudLoading @bind-Loading="_isSearching" Darken Overlap>

    <CreatePostComponent />

    <MudDivider Class="my-4" />

    <PostSearchForm OnValidSubmit="@Search" @bind-Filter="_filter" />

    @if (!_hasSearched)
    {
        return;
    }

    @if (_searchResult.TotalCount == 0)
    {
        <MudPaper Elevation="3" Class="pa-10 mt-5">
            <MudAlert Severity="Severity.Info" ContentAlignment="HorizontalAlignment.Center" Class="align-center">
                <MudText Align="Align.Center" Typo="Typo.h6">Ingen opslag fundet.</MudText>
            </MudAlert>
        </MudPaper>
        return;
    }

    <SponsorAd Class="mt-5"
               ImageAlt="Reklame for Moon Creative"
               MobileImagePath="images/ads/mooncreative_mobile.png"
               DesktopImagePath="images/ads/mooncreative_mobile.png"
               Link="https://www.mooncreative.dk/" />

    <PostSearchResultComponent Filter="_filter" SearchResult="_searchResult" SelectedPageChanged="@OnSelectedPageChanged" />

</MudLoading>

@code {
    private PostSearchFilter _filter = new();
    private PostSearchResult _searchResult = new();

    private bool _isSearching = false;
    private bool _hasSearched = false;

    private async Task Search()
    {
        _isSearching = true;
        try
        {
            var result = await PostSearchService.GetPostsAsync(_filter);

            result.Switch(
                success =>
                {
                    _searchResult = success;
                    Snackbar.Add($"{_searchResult.TotalCount} opslag fundet.", Severity.Success);
                },
                error => Snackbar.Add(error.Value, Severity.Error)
            );
        }
        catch (Exception exception)
        {
            Logger.LogError(exception, "Error occurred during post search");
            Snackbar.Add("Der opstod en fejl under søgningen.", Severity.Error);
        }
        finally
        {
            _hasSearched = true;
            _isSearching = false;
        }
    }

    private async Task OnSelectedPageChanged(int selectedPage)
    {
        _filter.PageNumber = selectedPage;
        await Search();
    }
}
